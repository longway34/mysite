[{"C:\\Users\\longway\\Projects\\mysite\\src\\index.js":"1","C:\\Users\\longway\\Projects\\mysite\\src\\reportWebVitals.js":"2","C:\\Users\\longway\\Projects\\mysite\\src\\App.js":"3","C:\\Users\\longway\\Projects\\mysite\\src\\components\\Header.js":"4","C:\\Users\\longway\\Projects\\mysite\\src\\components\\SiteTitleLogo.js":"5","C:\\Users\\longway\\Projects\\mysite\\src\\components\\Middle.js":"6","C:\\Users\\longway\\Projects\\mysite\\src\\containers\\AboutPageContainer.js":"7","C:\\Users\\longway\\Projects\\mysite\\src\\containers\\PosterPageContainer.js":"8","C:\\Users\\longway\\Projects\\mysite\\src\\components\\ReadmePageComponent.js":"9","C:\\Users\\longway\\Projects\\mysite\\src\\containers\\SeparatorPageContainer.js":"10","C:\\Users\\longway\\Projects\\mysite\\src\\containers\\KKZPageContainer.js":"11","C:\\Users\\longway\\Projects\\mysite\\src\\components\\Helper.js":"12","C:\\Users\\longway\\Projects\\mysite\\src\\containers\\NodejsAnonseContainer.js":"13","C:\\Users\\longway\\Projects\\mysite\\src\\components\\ReadmeAnonsePageComponent.js":"14","C:\\Users\\longway\\Projects\\mysite\\src\\containers\\CPPAnonseContainer.js":"15","C:\\Users\\longway\\Projects\\mysite\\src\\components\\MainLeftMenu.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":425,"mtime":1607353399441,"results":"20","hashOfConfig":"18"},{"size":3201,"mtime":1608125152886,"results":"21","hashOfConfig":"18"},{"size":1115,"mtime":1607448774128,"results":"22","hashOfConfig":"18"},{"size":2445,"mtime":1608125434884,"results":"23","hashOfConfig":"18"},{"size":1009,"mtime":1607446579840,"results":"24","hashOfConfig":"18"},{"size":1161,"mtime":1608123708409,"results":"25","hashOfConfig":"18"},{"size":2579,"mtime":1608097827759,"results":"26","hashOfConfig":"18"},{"size":1028,"mtime":1607612576102,"results":"27","hashOfConfig":"18"},{"size":1600,"mtime":1608123708431,"results":"28","hashOfConfig":"18"},{"size":2841,"mtime":1608130443504,"results":"29","hashOfConfig":"18"},{"size":2716,"mtime":1608116785414,"results":"30","hashOfConfig":"18"},{"size":1743,"mtime":1608116631127,"results":"31","hashOfConfig":"18"},{"size":2689,"mtime":1608124602659,"results":"32","hashOfConfig":"18"},{"size":2782,"mtime":1608125093633,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1fz0wrm",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\Users\\longway\\Projects\\mysite\\src\\index.js",[],["73","74"],"C:\\Users\\longway\\Projects\\mysite\\src\\reportWebVitals.js",[],"C:\\Users\\longway\\Projects\\mysite\\src\\App.js",[],"C:\\Users\\longway\\Projects\\mysite\\src\\components\\Header.js",["75","76","77","78"],"// const { ReactComponent } = require(\"*.svg\");\r\n\r\nimport React from 'react';\r\nimport { Card, Col, Container, Figure, Image, Nav, Navbar, NavDropdown, Row } from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport SiteTitle from './SiteTitleLogo';\r\n\r\nimport logo from './mylogo.png';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <Navbar className='bg-light justify-content-between' style={{ backgroundColor: '#e3ffff' }}>\r\n                        <Nav>\r\n                            <Nav.Item>\r\n                                <SiteTitle />\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        {/* <Nav.Item> */}\r\n                        {/* <SiteTitle /> */}\r\n                        <Nav fill variant='tabs' defaultActiveKey='/about'>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey='/about' to='/about' as={Link}>К чему все это...</Nav.Link>\r\n                            </Nav.Item>\r\n                            <NavDropdown title='Проекты'>\r\n                                <NavDropdown.Item eventKey='/projects/poster_s' to='/projects/poster_s' as={Link}>Poster (сервер)</NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey='/projects/poster_c' to='/projects/poster_c' as={Link}>Poster (клиент)</NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey='/projects/kkz_md' to='/projects/kkz_md' as={Link}>Метеллодитектор (управление)</NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey='/projects/kkz_web' to='/projects/kkz_web' as={Link}>Метеллодитектор (http сервер)</NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey='/projects/kkz_ui' to='/projects/kkz_ui' as={Link}>Метеллодитектор (клиент)</NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey='/projects/separator' to='/projects/separator' as={Link}>Сепаратор</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title='Исходники'>\r\n                                <NavDropdown.Item eventKey='/sources/nodejs' to='/sources/nodejs' as={Link}>NodeJS</NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey='/sources/cpp' to='/sources/cpp' as={Link}>C++</NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey='/sources/qt' to='/sources/qt' as={Link}>Qt</NavDropdown.Item>\r\n                                <NavDropdown.Item eventKey='/sources/js' to='/sources/js' as={Link}>JavaScript</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                        {/* </Nav.Item> */}\r\n                        {/* <Nav.Item> */}\r\n\r\n                        {/* </Nav.Item> */}\r\n                        {/* </Nav> */}\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n        </Container>);\r\n};\r\n\r\nexport default withRouter(Header);","C:\\Users\\longway\\Projects\\mysite\\src\\components\\SiteTitleLogo.js",[],"C:\\Users\\longway\\Projects\\mysite\\src\\components\\Middle.js",[],"C:\\Users\\longway\\Projects\\mysite\\src\\containers\\AboutPageContainer.js",[],"C:\\Users\\longway\\Projects\\mysite\\src\\containers\\PosterPageContainer.js",[],"C:\\Users\\longway\\Projects\\mysite\\src\\components\\ReadmePageComponent.js",["79","80","81"],"import React, {Component} from 'react';\r\nimport Markdown from 'react-markdown';\r\nimport {Spinner} from 'react-bootstrap';\r\n// import HTMLView from 'react-native-htmlview';\r\n\r\nvar MarkdownIt = require('markdown-it'); \r\nvar mdReader = new MarkdownIt();\r\n\r\nvar cheerio = require('cheerio');\r\n\r\nclass PosterPageComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n    anonsCreate(readme, numParagraphs=3, firstParagraph=0, numImage=1, firstImage=0){\r\n        let html = mdReader.render(readme);\r\n        let $ = cheerio.load(html);\r\n        let outParagraph = [];\r\n        let outImages = [];\r\n        let paragraphCount = 0;\r\n        $('p, h1, h2, h3, h4, h5, h6').each((index, paragraph) => {\r\n            if(paragraph.firstChild.type == 'text'){\r\n                if(index >= firstParagraph){\r\n                    if(++paragraphCount > numParagraphs){\r\n                        return;\r\n                    } else {\r\n                        outParagraph.push(paragraph);\r\n                    }\r\n                }\r\n            }\r\n            // console.log(paragraph.html);\r\n        })\r\n        let imagesCount = 0;\r\n        $('img').each((index, image) =>{\r\n            if(index >= firstImage){\r\n                outImages.push(image);\r\n                if(++imagesCount > numImage){\r\n                    return;\r\n                }\r\n            }\r\n        })\r\n        $ = cheerio.load('<div id=\"root\"/>');\r\n        let rootDiv = $('#root');\r\n        let imgsDiv = $('<div />');\r\n        imgsDiv.addClass('anonseImagesDiv');\r\n        outImages.forEach((img, index) =>{\r\n            imgsDiv.append(img);\r\n        })\r\n        rootDiv.append(imgsDiv);\r\n        outParagraph.forEach((p, index) =>{\r\n            let pn = $('<p>').append(p.firstChild.data);\r\n            rootDiv.append(p);\r\n        });\r\n\r\n        // console.log(aid.data());\r\n        return $.html('#root');\r\n    }\r\n\r\n    render() {\r\n        const readme = this.props ? this.props.readme : null;\r\n        const isWaiting = this.props.isWaiting;\r\n        const anonse = this.props ? this.props.anonse ? true : false : false;\r\n\r\n        if(anonse && readme && !isWaiting){\r\n            var html = this.anonsCreate(readme);\r\n            return (<div dangerouslySetInnerHTML={{__html: html }} />);\r\n        }\r\n        let res = (!isWaiting && this.props.readme) ? <Markdown source={this.props.readme} /> : <Spinner animation=\"border\" variant=\"info\" />;\r\n\r\n        return (\r\n            <div className=\"Readme-div\">{res}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PosterPageComponent;","C:\\Users\\longway\\Projects\\mysite\\src\\containers\\SeparatorPageContainer.js",[],"C:\\Users\\longway\\Projects\\mysite\\src\\containers\\KKZPageContainer.js",[],"C:\\Users\\longway\\Projects\\mysite\\src\\components\\Helper.js",["82","83"],"C:\\Users\\longway\\Projects\\mysite\\src\\containers\\NodejsAnonseContainer.js",["84","85","86"],"import React, { Component } from 'react';\r\nimport { Card, CardDeck } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReadmeAnonsePageComponent from '../components/ReadmeAnonsePageComponent';\r\n// import ReadmePageComponent from './ReadmePageComponent';\r\n\r\nconst makeAnonse = require('../components/Helper');\r\n\r\nclass NodejsAnonseContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            readme: [],\r\n            isWaiting: props.isWaiting ? props.isWaiting : true\r\n        };\r\n        this.readmePaths = [\"https://raw.githubusercontent.com/longway34/mysite/master/README.md\",\r\n                           \"https://raw.githubusercontent.com/longway34/Poster_auto_suppliers_server/master/README.md\",\r\n                           \"https://raw.githubusercontent.com/longway34/Poster_auto_suppliers_client/master/README.md\"];\r\n        this.readmeParams = [\r\n            {firstParagraph: 0, numParagraphs: 5, firstImage: 0, numImages: 1, \r\n                // url: 'https://github.com/longway34/mysite', \r\n                url: '/about',\r\n                header: 'Этот забавный сайт...'},\r\n            {firstParagraph: 1, numParagraphs: 2, firstImage: 0, numImages: 1, \r\n                // url: 'https://github.com/longway34/Poster_auto_suppliers_server', \r\n                url: '/projects/poster_s',\r\n                header: 'Poster (серверная часть)'},\r\n            {firstParagraph: 1, numParagraphs: 2, firstImage: 1, numImages: 2, \r\n                // url: 'https://github.com/longway34/Poster_auto_suppliers_client', \r\n                url: '/projects/poster_c',\r\n                header: 'Poster (клиентская часть)'}\r\n        ];\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.readmePaths.forEach((path, index) =>{\r\n            axios.get(this.readmePaths[index])\r\n            .then((response) => {\r\n                let tArray = this.state.readme.slice();\r\n                tArray.push(response.data)\r\n                let w = this.readmePaths.length < tArray.length ? true : false;\r\n                this.setState({readme: tArray, isWaiting: w});\r\n            })\r\n            .catch((err) => {\r\n                let tArray = this.state.readme.slice();\r\n                tArray.push(\"<h1>Error loading README.MD page...</h1>\")\r\n                let w = this.readmePaths.length < tArray.length ? true : false;\r\n                this.setState({readme: tArray, isWaiting: w});\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){ \r\n        return (<ReadmeAnonsePageComponent isWaiting={this.state.isWaiting} readmes={this.state.readme} params={this.readmeParams} />)\r\n    };\r\n}\r\n\r\nexport default NodejsAnonseContainer;","C:\\Users\\longway\\Projects\\mysite\\src\\components\\ReadmeAnonsePageComponent.js",["87","88"],"import React from 'react';\r\nimport { Card, CardDeck, Spinner } from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst makeAnonse = require('./Helper').makeAnonse;\r\n\r\nconst context = (anonses, params) => {\r\n    return anonses.map((a, index) =>{\r\n        let html = makeAnonse(a, params[index].numParagraphs, params[index].firstParagraph, params[index].numImages, params[index].firstImage, params[index].url.startsWith(\"http\") ? params[index].url : '');\r\n        let ret = [];\r\n        if(params[index].header && params[index].header.length > 0){\r\n            ret.push(<Card.Header className=\"anonseCardHeader\">\r\n                        <Card.Link href=\"#\" to={!params[index].url.startsWith('http') ? params[index].url : ''} as={Link} >{params[index].header}</Card.Link>\r\n                    </Card.Header>);\r\n        }\r\n        ret.push(<Card.Body>\r\n                    <div dangerouslySetInnerHTML={{__html: html }} />\r\n                </Card.Body>);\r\n        if(params[index].footer && params[index].header.footer > 0){\r\n            ret.push(<Card.Footer>\r\n                        {params[index].footer}\r\n                    </Card.Footer>);\r\n        }\r\n\r\n        return (\r\n            <Card>\r\n                {ret}\r\n            </Card>\r\n        )\r\n\r\n    })\r\n}\r\n\r\n\r\nconst ReadmeAnonsePageComponent = props => {\r\n    let res = null;\r\n    if(!props.isWaiting){\r\n        res = context(props.readmes, props.params);\r\n        // res = (<CardDeck> \r\n        //         {context(props.readmes, props.params)};\r\n        //     </CardDeck>\r\n        // )\r\n    } else {\r\n        res = (<Spinner animation=\"border\" variant=\"info\" />)\r\n    }\r\n    return (<div>{res}</div>)\r\n\r\n};\r\n\r\nexport default ReadmeAnonsePageComponent;","C:\\Users\\longway\\Projects\\mysite\\src\\containers\\CPPAnonseContainer.js",["89","90","91"],"import React, { Component } from 'react';\r\nimport { Card, CardDeck } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReadmeAnonsePageComponent from '../components/ReadmeAnonsePageComponent';\r\n// import ReadmePageComponent from './ReadmePageComponent';\r\n\r\nconst makeAnonse = require('../components/Helper');\r\n\r\nclass CPPAnonseContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            readme: [],\r\n            isWaiting: props.isWaiting ? props.isWaiting : true\r\n        };\r\n        this.readmePaths = [\"https://raw.githubusercontent.com/longway34/kkz/main/md_release_5/Readme.md\",\r\n                            \"https://raw.githubusercontent.com/longway34/kkz/main/web_release_5/Readme.md\",\r\n                           \"https://raw.githubusercontent.com/longway34/SeparatorQt2_Demo/master/Readme.MD\"];\r\n        this.readmeParams = [\r\n            {firstParagraph: 0, numParagraphs: 7, firstImage: 0, numImages: 2, \r\n                url: '/projects/kkz_md',\r\n                header: 'Металлодитектор (программа управления)'},\r\n            {firstParagraph: 0, numParagraphs: 7, firstImage: 0, numImages: 1, \r\n                // url: 'https://github.com/longway34/Poster_auto_suppliers_server', \r\n                url: '/projects/kkz_web',\r\n                header: 'Металлодитектор (многопоточный http сервер)'},\r\n            {firstParagraph: 0, numParagraphs: 2, firstImage: 0, numImages: 2, \r\n                // url: 'https://github.com/longway34/Poster_auto_suppliers_client', \r\n                url: '/projects/kkz_ui',\r\n                header: 'Сепаратор'}\r\n        ];\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.readmePaths.forEach((path, index) =>{\r\n            axios.get(this.readmePaths[index])\r\n            .then((response) => {\r\n                let tArray = this.state.readme.slice();\r\n                tArray.push(response.data)\r\n                let w = this.readmePaths.length < tArray.length ? true : false;\r\n                this.setState({readme: tArray, isWaiting: w});\r\n            })\r\n            .catch((err) => {\r\n                let tArray = this.state.readme.slice();\r\n                tArray.push(\"<h1>Error loading README.MD page...</h1>\")\r\n                let w = this.readmePaths.length < tArray.length ? true : false;\r\n                this.setState({readme: tArray, isWaiting: w});\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){ \r\n        return (<ReadmeAnonsePageComponent isWaiting={this.state.isWaiting} readmes={this.state.readme} params={this.readmeParams} />)\r\n    };\r\n}\r\n\r\nexport default CPPAnonseContainer;","C:\\Users\\longway\\Projects\\mysite\\src\\components\\MainLeftMenu.js",["92","93"],"import React from 'react';\r\nimport { Card, ListGroup, ListGroupItem, Nav, NavItem, NavLink } from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nfunction MainLeftMenu(props) {\r\n    return (\r\n        <din>\r\n            <Card>\r\n                <Card.Header>Проекты</Card.Header>\r\n                <Card.Body>\r\n                    <Nav className=\"flex-column\" variant=\"pills\" activeKey={props.location.pathname}>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/about' as={Link} to='/about'>Этот веселый сайт</NavLink></NavItem>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/projects/poster_s' as={Link} to='/projects/poster_s'>Poster (сервер)</NavLink></NavItem>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/projects/poster_c' as={Link} to='/projects/poster_c'>Poster (клиент)</NavLink></NavItem>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/projects/kkz_md' as={Link} to='/projects/kkz_md'>Металлодитектор (управление)</NavLink></NavItem>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/projects/kkz_web' as={Link} to='/projects/kkz_web'>Металлодитектор (http сервер)</NavLink></NavItem>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/projects/kkz_ui' as={Link} to='/projects/kkz_ui'>Металлодитектор (клиент)</NavLink></NavItem>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/projects/separator' as={Link} to='/projects/separator'>Сепаратор</NavLink></NavItem>\r\n                    </Nav>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card>\r\n                <Card.Header>Исходники проектов</Card.Header>\r\n                <Card.Body>\r\n                    <Nav className=\"flex-column\" variant=\"pills\" activeKey={props.location.pathname}>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/sources/nodejs' as={Link} to='/sources/nodejs'>NodeJS</NavLink></NavItem>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/sources/cpp' as={Link} to='/sources/cpp'>C++</NavLink></NavItem>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/sources/qt' as={Link} to='/sources/qt'>Qt</NavLink></NavItem>\r\n                        <NavItem><NavLink className='App-left-menu' eventKey='/sources/js' as={Link} to='/sources/js'>JavaScript</NavLink></NavItem>\r\n                    </Nav>\r\n                </Card.Body>\r\n            </Card>\r\n        </din>\r\n    );\r\n}\r\n\r\nexport default withRouter(MainLeftMenu);",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":14},{"ruleId":"98","severity":1,"message":"102","line":4,"column":32,"nodeType":"100","messageId":"101","endLine":4,"endColumn":38},{"ruleId":"98","severity":1,"message":"103","line":4,"column":40,"nodeType":"100","messageId":"101","endLine":4,"endColumn":45},{"ruleId":"98","severity":1,"message":"104","line":8,"column":8,"nodeType":"100","messageId":"101","endLine":8,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":12,"column":5,"nodeType":"107","messageId":"108","endLine":16,"endColumn":6},{"ruleId":"109","severity":1,"message":"110","line":25,"column":42,"nodeType":"111","messageId":"112","endLine":25,"endColumn":44},{"ruleId":"98","severity":1,"message":"113","line":54,"column":17,"nodeType":"100","messageId":"101","endLine":54,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":27,"column":38,"nodeType":"111","messageId":"112","endLine":27,"endColumn":40},{"ruleId":"109","severity":1,"message":"110","line":48,"column":13,"nodeType":"111","messageId":"112","endLine":48,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"114","line":2,"column":16,"nodeType":"100","messageId":"101","endLine":2,"endColumn":24},{"ruleId":"98","severity":1,"message":"115","line":7,"column":7,"nodeType":"100","messageId":"101","endLine":7,"endColumn":17},{"ruleId":"98","severity":1,"message":"114","line":2,"column":16,"nodeType":"100","messageId":"101","endLine":2,"endColumn":24},{"ruleId":"98","severity":1,"message":"116","line":3,"column":16,"nodeType":"100","messageId":"101","endLine":3,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"114","line":2,"column":16,"nodeType":"100","messageId":"101","endLine":2,"endColumn":24},{"ruleId":"98","severity":1,"message":"115","line":7,"column":7,"nodeType":"100","messageId":"101","endLine":7,"endColumn":17},{"ruleId":"98","severity":1,"message":"117","line":2,"column":16,"nodeType":"100","messageId":"101","endLine":2,"endColumn":25},{"ruleId":"98","severity":1,"message":"118","line":2,"column":27,"nodeType":"100","messageId":"101","endLine":2,"endColumn":40},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Figure' is defined but never used.","'Image' is defined but never used.","'logo' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'pn' is assigned a value but never used.","'CardDeck' is defined but never used.","'makeAnonse' is assigned a value but never used.","'withRouter' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","no-global-assign","no-unsafe-negation"]